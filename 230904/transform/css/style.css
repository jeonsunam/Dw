/* 아래에서 반복되는것을 줄이기 위해서 클래스 하나 생성해서 쓰기 */
.box {
    /* inline과 block의 성격을 모두 가진 속성 /inline은 width와 height값을 읽지 못한다 / 그래서 inline요소에 width, height 값을 적용할 때 사용 inline-block */
    display:inline-block;
    width: 100px;
    height: 100px;
    border: 1px solid black;
    border-radius: 8px;
    background-color: rgb(35, 47, 204);
}

#first {
    background-color: orange;
    /* deg = degree(각도) 값을 -로주면 반대방향으로 회전한다*/
    transform: rotate(0deg);
    /* transform의 기준점을 정해주는 속성 */
    transform-origin: left bottom;
    /* 여러가지 속성에 대해 개별적으로 transition을 적용할 수 있다.
    transition: transform 2s ease, margin-left 1s ease */
    transition: transform 2s ease;
}

#second {
    background-color: brown;
    transform: scale(1);
    transition: transform 2s ease;
    /* margin-left: 100px; */
}

#third {
    background-color: aqua;
    /* skew(X값, Y값) */
    transform: skew(0deg);
    /* transform: skewX(30deg);
    transform: skewY(30deg; */
    transition: transform 2s ease;
}
/* hover에 width값과 height값을 주면 밀려서 실행이 된다 */
#first:hover {
    transform: rotate(-1080deg) translateX(100%);
    background-color: red;
}
/* scale(2) 2배만큼 커짐 */
#second:hover {
    transform: scale(2);
}
/* skew(60deg) 60도 만큼 비틀기? */
#third:hover {
    transform: skew(60deg);
}
/* translateX(X축으로 이동할 값) X축으로 값만큼 이동 */
#t1 {
    transform: translateX(0);
    transition: transform 2s cubic-bezier(0.42, 0, 0.06, 1.87)
}

#t1:hover {
    transform: translateX(100%);
}
/* translateY(Y축으로 이동할 값) Y축으로 값만큼 이동 */
#t2 {
    /* 퍼포먼스 개선을 위해 transform3D를 활용하는 경우도 있다. */
    /* 주의할 점 : animation/transform을 과하게 많이쓰면, 브라우저가 해야할 일이 많아져, 화면이 버벅거리는 원인이 될 수 있다. */
    transform: translate3d(100px, 0, 0);
    transform: translateX(0);
    /* transition: all /몇초에 걸쳐서/ delay값 / 실행하는 함수*/
    transition: transform 2s 1s cubic-bezier(0, 2.34, 0,-0.85)
    /* transform: translateY(50%); */
}

#t2:hover {
    transform: translateX(100%);
}
/* translate(X값 Y값) X, Y축으로 값만큼 이동 */
#t3 {
    /* transform: translate(50px, 50px); */
    transform: translateX(0);
    transition: transform 2s ease-in-out
}

#t3:hover {
    transform: translateX(100%);
}